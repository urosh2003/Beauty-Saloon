package gui;

import org.jdatepicker.JDateComponentFactory;
import org.jdatepicker.JDatePicker;
import org.jdatepicker.impl.UtilDateModel;
import tretmani.Tretmani;
import tretmani.VrstaTretmana;
import tretmani.ZakazanTretman;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.GregorianCalendar;
import java.util.Properties;

public class IzvestajVrste extends JFrame {
    private JScrollPane tabelaPanel;
    private JPanel VrstePanel;

    public IzvestajVrste() {
        UtilDateModel dateModel = new UtilDateModel();
        Properties properties = new Properties();

        JDateComponentFactory fabrika = new JDateComponentFactory();
        JDatePicker datePickerOd = fabrika.createJDatePicker();
        JDatePicker datePickerDo = fabrika.createJDatePicker();

        Object[] components = {"Od:", datePickerOd, "Do:", datePickerDo};
        Object[] optionsDate = {"OK", "Cancel"};
        LocalDate datumOd = null;
        LocalDate datumDo = null;


        int option = JOptionPane.showOptionDialog(null, components, "Date Picker", JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE, null, optionsDate, optionsDate[0]);
        if (option == JOptionPane.OK_OPTION) {
            GregorianCalendar selectedDate = (GregorianCalendar) datePickerOd.getModel().getValue();
            datumOd = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            selectedDate = (GregorianCalendar) datePickerDo.getModel().getValue();
            datumDo = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            System.out.println("Selected date: " + datumOd + " " + datumDo);
        } else {
            System.out.println("User cancelled.");
        }

        setTitle("Svi tipovi tretmana");
        setSize(500, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Object[] vrste = Tretmani.sveVrsteTretmana.values().toArray();
        String[] header = {"Naziv", "Tip tretmana", "Cena", "Trajanje", "Broj usluga", "Prihod"};
        Object[][] sadrzaj = new Object[vrste.length][6];
        int i = 0;
        for (Object o : vrste) {
            VrstaTretmana vrsta = (VrstaTretmana) o;
            sadrzaj[i][0] = vrsta.getNazivVrsteTretmana();
            sadrzaj[i][1] = vrsta.getTipTretmana().getNazivTipaTretmana();
            sadrzaj[i][2] = vrsta.getCena();
            sadrzaj[i][3] = vrsta.getTrajanje();
            sadrzaj[i][4] = Tretmani.brojZakazanih(vrsta, datumOd, datumDo);
            sadrzaj[i][5] = Tretmani.prihodZakazanih(vrsta, datumOd, datumDo);
            i++;
        }

        DefaultTableModel model = new DefaultTableModel(sadrzaj, header) {
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };

        model.setColumnIdentifiers(header);
        JTable tabelaIspis = new JTable(model);


        tabelaPanel.setViewportView(tabelaIspis);
        setContentPane(VrstePanel);
        tabelaIspis.setFocusable(false);
        tabelaIspis.setRowSelectionAllowed(true);
        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        VrstePanel = new JPanel();
        VrstePanel.setLayout(new GridBagLayout());
        tabelaPanel = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        VrstePanel.add(tabelaPanel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        VrstePanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        VrstePanel.add(spacer2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return VrstePanel;
    }
}
