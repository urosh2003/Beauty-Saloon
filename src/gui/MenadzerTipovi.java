package gui;

import korisnici.Korisnici;
import korisnici.Korisnik;
import korisnici.Kozmeticar;
import korisnici.Zaposleni;
import tretmani.TipTretmana;
import tretmani.Tretmani;

import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MenadzerTipovi extends JFrame {
    private JButton dodajTipButton;
    private JButton obrisiTipButton;
    private JScrollPane tabelaPanel;
    private JPanel TipoviPanel;

    public MenadzerTipovi() {
        setTitle("Svi tipovi tretmana");
        setSize(500, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Object[] tipovi = Tretmani.sviTipoviTretmana.values().toArray();
        String[] header = {"Tip tretmana"};
        Object[][] sadrzaj = new Object[tipovi.length][1];
        int i = 0;
        for (Object o : tipovi) {
            TipTretmana tip = (TipTretmana) o;
            sadrzaj[i][0] = tip.getNazivTipaTretmana();
            i++;
        }

        DefaultTableModel model = new DefaultTableModel(sadrzaj, header) {
        };

        model.setColumnIdentifiers(header);
        JTable tabelaIspis = new JTable(model);

        TableModelListener listener = new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.UPDATE) {
                    int red = e.getFirstRow();
                    int kolona = e.getColumn();
                    TipTretmana tip = (TipTretmana) tipovi[red];
                    String naziv = (String) tabelaIspis.getModel().getValueAt(red, kolona);

                    Tretmani.sviTipoviTretmana.get(tip.idGetter()).editTipTretmana(naziv);
                }
            }
        };
        tabelaIspis.getModel().addTableModelListener(listener);


        tabelaPanel.setViewportView(tabelaIspis);
        setContentPane(TipoviPanel);
        tabelaIspis.setFocusable(false);
        tabelaIspis.setRowSelectionAllowed(true);
        setVisible(true);


        dodajTipButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String userInput = JOptionPane.showInputDialog("Unesite naziv tipa tretmana:");

                if (userInput != null) {
                    TipTretmana tip = new TipTretmana(userInput);
                    boolean uspeh = Tretmani.dodajTipTretmana(tip);

                    if (uspeh) {
                        JOptionPane.showMessageDialog(null, "Dodavanje uspesno", "Uspeh", JOptionPane.INFORMATION_MESSAGE);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Tip vec postoji", "Registracija neuspesna", JOptionPane.ERROR_MESSAGE);
                    }
                    dispose();
                } else {
                    System.out.println("User canceled the input.");
                }
            }
        });
        obrisiTipButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                TipTretmana tip = (TipTretmana) tipovi[tabelaIspis.getSelectedRow()];
                int choice = JOptionPane.showConfirmDialog(null, "Da li ste sigurni?", "Potvrda", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.YES_OPTION) {
                    Tretmani.obrisiTip(tip);
                    JOptionPane.showMessageDialog(null, "Brisanje uspesno", "Uspeh", JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                } else {
                    System.out.println("Cancelled.");
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        TipoviPanel = new JPanel();
        TipoviPanel.setLayout(new GridBagLayout());
        tabelaPanel = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.BOTH;
        TipoviPanel.add(tabelaPanel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        TipoviPanel.add(spacer1, gbc);
        dodajTipButton = new JButton();
        dodajTipButton.setText("Dodaj tip");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        TipoviPanel.add(dodajTipButton, gbc);
        obrisiTipButton = new JButton();
        obrisiTipButton.setText("Obrisi tip");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        TipoviPanel.add(obrisiTipButton, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        TipoviPanel.add(spacer2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return TipoviPanel;
    }
}
